<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<!-- 添加对Annotation的支持 -->
	<context:annotation-config />

	<!-- spring自动扫描和管理bean的声明 -->
	<context:component-scan base-package="com.sishu">
		<!-- 排除带有Controller注解的 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- AOP代理，默认是只代理接口 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 事务注解,也让他代理类 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 使用的是标准的spring事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sishu" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/sishu/**/*Mapper.xml" />
	</bean>

	<!-- MapperScannerConfigurer 扫描到Mapper自动去生成Dao的实现 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		lazy-init="true">
		<property name="basePackage" value="com.sishu" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" 
			/> -->
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
	</bean>
</beans>






<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
	destroy-method="close" lazy-init="true"> <property name="driverClass" value="com.mysql.jdbc.Driver" 
	/> <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/sishu" /> 
	<property name="user" value="root" /> <property name="password" value="123456" 
	/> 连接池中保留的最小连接数。 <property name="minPoolSize" value="${jdbc.minPoolSize}" 
	/> -->
<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 <property name="acquireRetryAttempts" 
	value="${jdbc.acquireRetryAttempts}" /> -->
<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 <property name="acquireIncrement" 
	value="${jdbc.acquireIncrement}" /> -->
<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 <property name="maxIdleTime" 
	value="${jdbc.maxIdleTime}" /> -->
<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 <property name="initialPoolSize" 
	value="${jdbc.initialPoolSize}" /> -->
<!--连接池中保留的最大连接数。Default: 15 <property name="maxPoolSize" value="${jdbc.maxPoolSize}" 
	/> -->
<!--每60秒检查所有连接池中的空闲连接。Default: 0 <property name="idleConnectionTestPeriod" 
	value="${jdbc.idleConnectionTestPeriod}" /> -->
<!--两次连接中间隔时间，单位毫秒。Default: 1000 <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" 
	/> </bean> -->





<!-- mybatis自动生成daoImpl <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
	lazy-init="true"> <property name="dataSource" ref="dataSource" /> <property 
	name="typeAliasesPackage" value="cn.chinatelecom.zq" /> </bean> -->

<!-- mybatis需要扫描的dao包 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
	lazy-init="true"> <property name="basePackage" value="cn.chinatelecom.*.*.dao" 
	/> <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
	</bean> <bean class="cn.chinatelecom.zqback.console.server.StartService" 
	/> -->
